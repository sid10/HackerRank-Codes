/*
  Merge two linked lists 
  head pointer input could be NULL as well for empty list
  Node is defined as 
  class Node {
     int data;
     Node next;
  }
*/

Node MergeLists(Node headA, Node headB) {
     // This is a "method-only" submission. 
     // You only need to complete this method 
    if(headA == null)return headB;
    if(headB == null)return headA;
Node newlist=null,start=null;
    
    while(headA!=null && headB != null){
        Node temp=new Node();
        if(headA.data < headB.data){
            temp.data=headA.data;
            headA=headA.next;
        }
        else{
            temp.data=headB.data;
            headB=headB.next;
        }
        if(newlist==null){newlist=temp; start=newlist;}
        else { newlist.next=temp; newlist = newlist.next; }
    }
    if(headA == null && headB == null) return start;
    if(headA != null) {
        while(headA != null){
            Node temp=new Node();
            temp.data=headA.data;
            temp.next=null;
            newlist.next=temp;
            newlist=newlist.next;
            headA=headA.next;
        }
        return start;
    }
    if(headB != null){
        while(headB != null){
            Node temp=new Node();
            temp.data=headB.data;
            temp.next=null;
            newlist.next=temp;
            newlist=newlist.next;
            headB=headB.next;
        }
        return start;
    }
    return null;

}